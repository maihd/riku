# GNU Make project makefile autogenerated by GENie
ifndef config
  config=debug32
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = $(ANDROID_NDK_CLANG)/bin/clang
CXX = $(ANDROID_NDK_CLANG)/bin/clang++
AR  = $(ANDROID_NDK_ARM64)/bin/aarch64-linux-android-ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = riku.unit_tests.make

ifeq ($(config),debug32)
  OBJDIR              = ../../android-arm/obj/x32/debug/riku.unit_tests
  TARGETDIR           = ../../android-arm/bin
  TARGET              = $(TARGETDIR)/libriku.unit_testsdebug.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"$(ANDROID_NDK_ROOT)/sysroot/usr/include/arm-linux-androideabi" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m32 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a" -L"." -L"../../android-arm/bin" -m32 -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm/usr/lib/crtbegin_so.o $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm/usr/lib/crtend_so.o -target armv7-none-linux-androideabi -march=armv7-a -Wl,--fix-cortex-a8
  LIBDEPS            += ../../android-arm/bin/librikudebug.a
  LDDEPS             += ../../android-arm/bin/librikudebug.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR              = ../../android-arm/obj/x32/release/riku.unit_tests
  TARGETDIR           = ../../android-arm/bin
  TARGET              = $(TARGETDIR)/libriku.unit_testsrelease.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"$(ANDROID_NDK_ROOT)/sysroot/usr/include/arm-linux-androideabi" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m32 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm -target armv7-none-linux-androideabi -mthumb -march=armv7-a -mfloat-abi=softfp -mfpu=neon
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/armeabi-v7a" -L"." -L"../../android-arm/bin" -m32 -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm/usr/lib/crtbegin_so.o $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm/usr/lib/crtend_so.o -target armv7-none-linux-androideabi -march=armv7-a -Wl,--fix-cortex-a8
  LIBDEPS            += ../../android-arm/bin/librikurelease.a
  LDDEPS             += ../../android-arm/bin/librikurelease.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	$(SILENT) echo Stripping symbols.
	$(SILENT) $(ANDROID_NDK_ARM)/bin/arm-linux-androideabi-strip -s "$(TARGET)"
  endef
endif

ifeq ($(config),debug64)
  OBJDIR              = ../../android-arm64/obj/x64/debug/riku.unit_tests
  TARGETDIR           = ../../android-arm64/bin
  TARGET              = $(TARGETDIR)/libriku.unit_testsdebug.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"$(ANDROID_NDK_ROOT)/sysroot/usr/include/aarch64-linux-android" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -m64 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/arm64-v8a" -L"." -L"../../android-arm64/bin" -m64 -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64/usr/lib/crtbegin_so.o $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64/usr/lib/crtend_so.o -target arm64-none-linux-android -march=armv8-a -Wl,--fix-cortex-a8
  LIBDEPS            += ../../android-arm64/bin/librikudebug.a
  LDDEPS             += ../../android-arm64/bin/librikudebug.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR              = ../../android-arm64/obj/x64/release/riku.unit_tests
  TARGETDIR           = ../../android-arm64/bin
  TARGET              = $(TARGETDIR)/libriku.unit_testsrelease.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"$(ANDROID_NDK_ROOT)/sysroot/usr/include/aarch64-linux-android" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 -target arm64-none-linux-android -march=armv8-a
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/libs/arm64-v8a" -L"." -L"../../android-arm64/bin" -m64 -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -gcc-toolchain $(ANDROID_NDK_ARM) --sysroot=$(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64 $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64/usr/lib/crtbegin_so.o $(ANDROID_NDK_ROOT)/platforms/android-24/arch-arm64/usr/lib/crtend_so.o -target arm64-none-linux-android -march=armv8-a -Wl,--fix-cortex-a8
  LIBDEPS            += ../../android-arm64/bin/librikurelease.a
  LDDEPS             += ../../android-arm64/bin/librikurelease.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	$(SILENT) echo Stripping symbols.
	$(SILENT) $(ANDROID_NDK_ARM)/bin/arm-linux-androideabi-strip -s "$(TARGET)"
  endef
endif

ifeq ($(config),debug)
  OBJDIR              = obj/debug/riku.unit_tests
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libriku.unit_testsdebug.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"." -L"../../../scripts" -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now
  LIBDEPS            += ../../../scripts/librikudebug.a
  LDDEPS             += ../../../scripts/librikudebug.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = obj/release/riku.unit_tests
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libriku.unit_testsrelease.exe
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG
  INCLUDES           += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/llvm-libc++/include" -I"${ANDROID_NDK_ROOT}/sysroot/usr/include" -I"../../../include"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fdeclspec -fms-extensions -fPIC -no-canonical-prefixes -Wa,--noexecstack -fstack-protector-strong -ffunction-sections -Wunused-value -Wundef
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"." -L"../../../scripts" -no-canonical-prefixes -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now
  LIBDEPS            += ../../../scripts/librikurelease.a
  LDDEPS             += ../../../scripts/librikurelease.a
  LIBS               += $(LDDEPS) -lc -ldl -lm -landroid -llog -lc++_shared -lgcc
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(CXX) -o $(TARGET) $(LINKOBJS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	$(SILENT) echo Stripping symbols.
	$(SILENT) $(ANDROID_NDK_ARM)/bin/arm-linux-androideabi-strip -s "$(TARGET)"
  endef
endif

OBJDIRS := \
	$(OBJDIR) \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LIBDEPS) $(EXTERNAL_LIBS) $(RESOURCES) | $(TARGETDIR) $(OBJDIRS)
	@echo Linking riku.unit_tests
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning riku.unit_tests
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
